{"remainingRequest":"E:\\workspace\\vue\\vue-shop\\node_modules\\babel-loader\\lib\\index.js!E:\\workspace\\vue\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\workspace\\vue\\vue-shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspace\\vue\\vue-shop\\src\\components\\report\\report.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\workspace\\vue\\vue-shop\\src\\components\\report\\report.vue","mtime":1581047084938},{"path":"E:\\workspace\\vue\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\vue\\vue-shop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\workspace\\vue\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\vue\\vue-shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRTpcXHdvcmtzcGFjZVxcdnVlXFx2dWUtc2hvcFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBlY2hhcnRzIGZyb20gJ2VjaGFydHMnOwppbXBvcnQgXyBmcm9tICdsb2Rhc2gnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3JlcG9ydCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIC8vIOmcgOimgeWQiOW5tueahOaVsOaNrgogICAgICBvcHRpb25zOiB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICfnlKjmiLfmnaXmupAnCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsCiAgICAgICAgICBheGlzUG9pbnRlcjogewogICAgICAgICAgICB0eXBlOiAnY3Jvc3MnLAogICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNFOUVFRjMnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIGxlZnQ6ICczJScsCiAgICAgICAgICByaWdodDogJzQlJywKICAgICAgICAgIGJvdHRvbTogJzMlJywKICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IFt7CiAgICAgICAgICBib3VuZGFyeUdhcDogZmFsc2UKICAgICAgICB9XSwKICAgICAgICB5QXhpczogW3sKICAgICAgICAgIHR5cGU6ICd2YWx1ZScKICAgICAgICB9XQogICAgICB9CiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHt9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfbW91bnRlZCA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgLyojX19QVVJFX18qLwogICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIG15Q2hhcnQsIF9yZWYsIHJlcywgcmVzdWx0OwoKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIC8vIOWfuuS6juWHhuWkh+WlveeahGRvbe+8jOWIneWni+WMlmVjaGFydHPlrp7kvosKICAgICAgICAgICAgICBteUNoYXJ0ID0gZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYWluJykpOyAvLyDmjIflrprlm77ooajnmoTphY3nva7pobnlkozmlbDmja4KCiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJGh0dHAuZ2V0KCdyZXBvcnRzL3R5cGUvMScpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIF9yZWYgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIHJlcyA9IF9yZWYuZGF0YTsKCiAgICAgICAgICAgICAgaWYgKCEocmVzLm1ldGEuc3RhdHVzICE9PSAyMDApKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgdGhpcy4kbWVzc2FnZS5lcnJvcign6I635Y+W5pWw5o2u5aSx6LSlJykpOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIC8vIOWHhuWkh+aVsOaNruWSjOmFjee9rumhuQogICAgICAgICAgICAgIHJlc3VsdCA9IF8ubWVyZ2UocmVzLmRhdGEsIHRoaXMub3B0aW9ucyk7IC8vIOS9v+eUqOWImuaMh+WumueahOmFjee9rumhueWSjOaVsOaNruaYvuekuuWbvuihqOOAggoKICAgICAgICAgICAgICBteUNoYXJ0LnNldE9wdGlvbihyZXN1bHQpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCB0aGlzKTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgICByZXR1cm4gX21vdW50ZWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gbW91bnRlZDsKICB9KCksCiAgbWV0aG9kczoge30KfTs="},{"version":3,"sources":["report.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAiBA,OAAA,OAAA,MAAA,SAAA;AACA,OAAA,CAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA;AACA,MAAA,OAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA,SADA;AAIA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA,MADA;AAEA,UAAA,WAAA,EAAA;AACA,YAAA,IAAA,EAAA,OADA;AAEA,YAAA,KAAA,EAAA;AACA,cAAA,eAAA,EAAA;AADA;AAFA;AAFA,SAJA;AAaA,QAAA,IAAA,EAAA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,KAAA,EAAA,IAFA;AAGA,UAAA,MAAA,EAAA,IAHA;AAIA,UAAA,YAAA,EAAA;AAJA,SAbA;AAmBA,QAAA,KAAA,EAAA,CACA;AACA,UAAA,WAAA,EAAA;AADA,SADA,CAnBA;AAwBA,QAAA,KAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA;AADA,SADA;AAxBA;AAFA,KAAA;AAiCA,GApCA;AAqCA,EAAA,OArCA,qBAqCA,CACA,CAtCA;AAuCA,EAAA,OAvCA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAwCA;AACA,cAAA,OAzCA,GAyCA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,cAAA,CAAA,MAAA,CAAA,CAzCA,EA2CA;;AA3CA;AAAA,qBA4CA,KAAA,KAAA,CAAA,GAAA,CAAA,gBAAA,CA5CA;;AAAA;AAAA;AA4CA,cAAA,GA5CA,QA4CA,IA5CA;;AAAA,oBA6CA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GA7CA;AAAA;AAAA;AAAA;;AAAA,+CA6CA,KAAA,QAAA,CAAA,KAAA,CAAA,QAAA,CA7CA;;AAAA;AA+CA;AACA,cAAA,MAhDA,GAgDA,CAAA,CAAA,KAAA,CAAA,GAAA,CAAA,IAAA,EAAA,KAAA,OAAA,CAhDA,EAiDA;;AACA,cAAA,OAAA,CAAA,SAAA,CAAA,MAAA;;AAlDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoDA,EAAA,OAAA,EAAA;AApDA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>数据统计</el-breadcrumb-item>\r\n      <el-breadcrumb-item>数据报表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片 -->\r\n    <el-card>\r\n      <!-- 为ECharts准备一个具备大小（宽高）的Dom -->\r\n      <div id=\"main\" style=\"width: 800px;height:400px;\"></div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport echarts from 'echarts'\r\nimport _ from 'lodash'\r\nexport default {\r\n  name: 'report',\r\n  data() {\r\n    return {\r\n      // 需要合并的数据\r\n      options: {\r\n        title: {\r\n          text: '用户来源'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#E9EEF3'\r\n            }\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [\r\n          {\r\n            boundaryGap: false\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value'\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n  },\r\n  async mounted() {\r\n    // 基于准备好的dom，初始化echarts实例\r\n    var myChart = echarts.init(document.getElementById('main'))\r\n\r\n    // 指定图表的配置项和数据\r\n    const { data: res } = await this.$http.get('reports/type/1')\r\n    if (res.meta.status !== 200) return this.$message.error('获取数据失败')\r\n\r\n    // 准备数据和配置项\r\n    const result = _.merge(res.data, this.options)\r\n    // 使用刚指定的配置项和数据显示图表。\r\n    myChart.setOption(result)\r\n  },\r\n  methods: {\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/report"}]}