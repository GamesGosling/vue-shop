{"remainingRequest":"E:\\workspace\\vue\\vue-shop\\node_modules\\thread-loader\\dist\\cjs.js!E:\\workspace\\vue\\vue-shop\\node_modules\\babel-loader\\lib\\index.js!E:\\workspace\\vue\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\workspace\\vue\\vue-shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspace\\vue\\vue-shop\\src\\components\\goods\\params.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\workspace\\vue\\vue-shop\\src\\components\\goods\\params.vue","mtime":1581049555628},{"path":"E:\\workspace\\vue\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\vue\\vue-shop\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\vue\\vue-shop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\workspace\\vue\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\vue\\vue-shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["params.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n      <!-- 面包屑导航区域 -->\r\n      <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n        <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n        <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n        <el-breadcrumb-item>分类参数</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n      <!-- 卡片 -->\r\n      <el-card>\r\n        <!-- 警告区域 -->\r\n        <el-alert\r\n          title=\"注意：只允许为第三级分类设置相关参数\"\r\n          type=\"warning\"\r\n          show-icon\r\n          :closable=\"false\">\r\n        </el-alert>\r\n\r\n        <!-- 商品分类区域 -->\r\n        <el-row class=\"cat_opt\">\r\n          <el-col>\r\n            <span>选择商品分类：</span>\r\n            <!-- 级联选择器 -->\r\n            <el-cascader\r\n              v-model=\"selectedCateKeys\"\r\n              :options=\"cateList\"\r\n              :props=\"cateProps\"\r\n              @change=\"handleChange\"\r\n              clearable></el-cascader>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <!-- tab页签区域 -->\r\n        <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\r\n          <el-tab-pane label=\"动态参数\" name=\"many\">\r\n            <el-button type=\"primary\" size=\"mini\" :disabled=\"isBtnDisable\" @click=\"addDialogVisible = true\">添加参数</el-button>\r\n            <!-- 动态参数表格 -->\r\n            <el-table :data=\"manyTableData\" border stripe>\r\n              <el-table-column type=\"expand\">\r\n                <template slot-scope=\"scope\">\r\n                  <!-- 循环渲染tag标签 -->\r\n                  <el-tag v-for=\"(item, i) in scope.row.attr_vals\" :key=\"i\" closable @close=\"handleClose(i, scope.row)\">{{item}}</el-tag>\r\n                  <!-- 文本框 -->\r\n                  <el-input\r\n                    class=\"input-new-tag\"\r\n                    v-if=\"scope.row.inputVisible\"\r\n                    v-model=\"scope.row.inputValue\"\r\n                    ref=\"saveTagInput\"\r\n                    size=\"small\"\r\n                    @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                    @blur=\"handleInputConfirm(scope.row)\"\r\n                  >\r\n                  </el-input>\r\n                  <!-- 添加tag按钮 -->\r\n                  <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput(scope.row)\">+ New Tag</el-button>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column type=\"index\" label=\"#\"></el-table-column>\r\n              <el-table-column label=\"参数名称\" prop=\"attr_name\"></el-table-column>\r\n              <el-table-column label=\"操作\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialog(scope.row.attr_id)\">编辑</el-button>\r\n                  <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeParams(scope.row.attr_id)\">删除</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"静态属性\" name=\"only\">\r\n            <el-button type=\"primary\" size=\"mini\" :disabled=\"isBtnDisable\" @click=\"addDialogVisible = true\">添加属性</el-button>\r\n            <!-- 静态属性表格 -->\r\n            <el-table :data=\"onlyTableData\" border stripe>\r\n              <el-table-column type=\"expand\">\r\n                <template slot-scope=\"scope\">\r\n                  <!-- 循环渲染tag标签 -->\r\n                  <el-tag v-for=\"(item, i) in scope.row.attr_vals\" :key=\"i\" closable @close=\"handleClose(i, scope.row)\">{{item}}</el-tag>\r\n                  <!-- 文本框 -->\r\n                  <el-input\r\n                    class=\"input-new-tag\"\r\n                    v-if=\"scope.row.inputVisible\"\r\n                    v-model=\"scope.row.inputValue\"\r\n                    ref=\"saveTagInput\"\r\n                    size=\"small\"\r\n                    @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                    @blur=\"handleInputConfirm(scope.row)\"\r\n                  >\r\n                  </el-input>\r\n                  <!-- 添加tag按钮 -->\r\n                  <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput(scope.row)\">+ New Tag</el-button>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column type=\"index\" label=\"#\"></el-table-column>\r\n              <el-table-column label=\"属性名称\" prop=\"attr_name\"></el-table-column>\r\n              <el-table-column label=\"操作\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialog(scope.row.attr_id)\">编辑</el-button>\r\n                  <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeParams(scope.row.attr_id)\">删除</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </el-card>\r\n\r\n      <!-- 添加参数对话框 -->\r\n      <el-dialog\r\n        :title=\"'添加' + titleText\"\r\n        :visible.sync=\"addDialogVisible\"\r\n        width=\"50%\"\r\n        @close=\"closeAddDialog\">\r\n        <!-- 添加参数/属性表单 -->\r\n        <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\r\n          <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n            <el-input v-model=\"addForm.attr_name\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n\r\n      <!-- 编辑参数对话框 -->\r\n      <el-dialog\r\n        :title=\"'修改' + titleText\"\r\n        :visible.sync=\"editDialogVisible\"\r\n        width=\"50%\"\r\n        @close=\"closeEditDialog\">\r\n        <!-- 添加参数/属性表单 -->\r\n        <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"100px\">\r\n          <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n            <el-input v-model=\"editForm.attr_name\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'params',\r\n  data() {\r\n    return {\r\n      // 商品分类列表\r\n      cateList: [],\r\n      // 级联选择器的配置对象\r\n      cateProps: {\r\n        expandTrigger: 'hover',\r\n        value: 'cat_id',\r\n        label: 'cat_name',\r\n        children: 'children'\r\n      },\r\n      // 级联选择器中被选中的数据id\r\n      selectedCateKeys: [],\r\n      // 被激活的页签的名称\r\n      activeName: 'many',\r\n      // 动态参数数据\r\n      manyTableData: [],\r\n      // 静态属性数据\r\n      onlyTableData: [],\r\n      // 控制 添加对话框的显示与隐藏\r\n      addDialogVisible: false,\r\n      // 添加参数表单的数据对象\r\n      addForm: {\r\n        attr_name: ''\r\n      },\r\n      // 添加参数表单的验证对象\r\n      addFormRules: {\r\n        attr_name: [\r\n          { required: true, message: '请输入参数名称', trigger: 'blur' }\r\n        ]\r\n      },\r\n      // 控制 修改参数对话框的显示与隐藏\r\n      editDialogVisible: false,\r\n      // 修改参数表单的数据对象\r\n      editForm: {\r\n        attr_id: '',\r\n        attr_name: ''\r\n      },\r\n      // 修改参数表单的验证对象\r\n      editFormRules: {\r\n        attr_name: [\r\n          { required: true, message: '请输入参数名称', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    this.getCateList()\r\n  },\r\n  methods: {\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get('/categories')\r\n      if (res.meta.status !== 200) return this.$message.error('获取商品分类失败')\r\n      this.cateList = res.data\r\n      // console.log(this.cateList)\r\n    },\r\n    // 级联选择器发生改变，会触发该函数\r\n    handleChange() {\r\n      this.getParamsData()\r\n    },\r\n    // tab页签点击事件的函数\r\n    handleTabClick() {\r\n      this.getParamsData()\r\n    },\r\n    // 获取参数列表的数据\r\n    async getParamsData() {\r\n      if (this.selectedCateKeys.length !== 3) {\r\n        this.selectedCateKeys = []\r\n        this.manyTableData = []\r\n        this.onlyTableData = []\r\n      } else {\r\n        // 根据所选分类的id,和当前所处的面板，获取对应的参数\r\n        const { data: res } = await this.$http.get(`/categories/${this.cateId}/attributes`, { params: { sel: this.activeName } })\r\n        if (res.meta.status !== 200) return this.$message.error('获取参数列表失败')\r\n        res.data.forEach(item => {\r\n          item.attr_vals = item.attr_vals.length !== 0 ? item.attr_vals.split(' ') : []\r\n          // 控制文本框的显示与隐藏\r\n          item.inputVisible = false\r\n          item.inputValue = ''\r\n        })\r\n        if (this.activeName === 'many') {\r\n          this.manyTableData = res.data\r\n        } else {\r\n          this.onlyTableData = res.data\r\n        }\r\n      }\r\n    },\r\n    // 监听对话框关闭事件\r\n    closeAddDialog() {\r\n      this.$refs.addFormRef.resetFields()\r\n    },\r\n    // 点击添加参数确定按钮事件\r\n    addParams() {\r\n      this.$refs.addFormRef.validate(async valid => {\r\n        if (valid) {\r\n          const { data: res } = await this.$http.post(`categories/${this.cateId}/attributes`, {\r\n            attr_name: this.addForm.attr_name,\r\n            attr_sel: this.activeName\r\n          })\r\n          if (res.meta.status !== 201) return this.$message.error('添加参数失败')\r\n          this.$message.success('添加参数成功')\r\n          this.addDialogVisible = false\r\n          this.getParamsData()\r\n        }\r\n      })\r\n    },\r\n    // 参数编辑事件\r\n    async showEditDialog(attrId) {\r\n      this.editDialogVisible = true\r\n      // 查询当前参数id对应的数据\r\n      const { data: res } = await this.$http.get(`categories/${this.cateId}/attributes/${attrId}`, { params: this.activeName })\r\n      if (res.meta.status !== 200) return this.$message.error('获取参数失败')\r\n      this.editForm = res.data\r\n    },\r\n    // 监听修改对话框关闭事件\r\n    closeEditDialog() {\r\n      this.$refs.editFormRef.resetFields()\r\n    },\r\n    // 点击修改参数确定按钮事件\r\n    editParams() {\r\n      this.$refs.editFormRef.validate(async valid => {\r\n        if (valid) {\r\n          const { data: res } = await this.$http.put(`categories/${this.cateId}/attributes/${this.editForm.attr_id}`,\r\n            { attr_name: this.editForm.attr_name, attr_sel: this.activeName })\r\n          if (res.meta.status !== 200) return this.$message.error('修改参数失败')\r\n          this.$message.success('修改参数成功')\r\n          this.getParamsData()\r\n          this.editDialogVisible = false\r\n        }\r\n      })\r\n    },\r\n    // 删除参数按钮事件\r\n    async removeParams(attrId) {\r\n      const confirmRes = await this.$confirm(\r\n        '此操作将永久删除该参数, 是否继续?',\r\n        '提示',\r\n        {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }\r\n      ).catch(err => err)\r\n      if (confirmRes !== 'confirm') {\r\n        return this.$message.info('已取消删除')\r\n      }\r\n      const { data: res } = await this.$http.delete(`categories/${this.cateId}/attributes/${attrId}`)\r\n      if (res.meta.status !== 200) return this.$message.error('删除参数失败！')\r\n      this.$message.success('删除参数成功！')\r\n      this.getParamsData()\r\n    },\r\n    // 文本框失去焦点或者按下enter键调用该函数\r\n    async handleInputConfirm(row) {\r\n      if (row.inputValue.trim().length === 0) {\r\n        row.inputValue = ''\r\n        row.inputVisible = false\r\n      } else {\r\n        // 后续处理\r\n        row.attr_vals.push(row.inputValue.trim())\r\n        // 保存操作\r\n        this.saveAttrVals(row)\r\n        row.inputValue = ''\r\n        row.inputVisible = false\r\n      }\r\n    },\r\n    // 点击按钮，展示输入文本框\r\n    showInput(row) {\r\n      row.inputVisible = true\r\n      // 让文本框获得焦点\r\n      // $nextTick 当页面的元素被重新渲染之后，才会指定回调函数中的代码\r\n      this.$nextTick(_ => {\r\n        this.$refs.saveTagInput.$refs.input.focus()\r\n      })\r\n    },\r\n    // 删除tag参数项\r\n    handleClose(i, row) {\r\n      row.attr_vals.splice(i, 1)\r\n      // 保存修改\r\n      this.saveAttrVals(row)\r\n    },\r\n    // 修改attr_vals的操作保存到数据库\r\n    async saveAttrVals(row) {\r\n      const { data: res } = await this.$http.put(`categories/${this.cateId}/attributes/${row.attr_id}`, {\r\n        attr_name: row.attr_name,\r\n        attr_sel: row.attr_sel,\r\n        attr_vals: row.attr_vals.join(' ')\r\n      })\r\n      if (res.meta.status !== 200) return this.$message.error('修改参数项失败')\r\n      this.$message.success('修改参数项成功')\r\n    }\r\n\r\n  },\r\n  computed: {\r\n    // 如果按钮需要被禁用，则返回true 否则返回false\r\n    isBtnDisable() {\r\n      if (this.selectedCateKeys.length !== 3) {\r\n        return true\r\n      }\r\n      return false\r\n    },\r\n    // 当前选中的三级分类的id\r\n    cateId() {\r\n      if (this.selectedCateKeys.length === 3) {\r\n        return this.selectedCateKeys[2]\r\n      }\r\n      return null\r\n    },\r\n    // 动态计算标题文本\r\n    titleText() {\r\n      if (this.activeName === 'many') {\r\n        return '动态参数'\r\n      }\r\n      return '静态属性'\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n  .cat_opt{\r\n    margin: 15px 0;\r\n  }\r\n  .el-tag{\r\n    margin: 10px;\r\n  }\r\n  .input-new-tag{\r\n    width: 120px;\r\n   }\r\n</style>\r\n"],"sourceRoot":"src/components/goods"}]}