{"remainingRequest":"C:\\Users\\administer\\Desktop\\code\\vue-shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\administer\\Desktop\\code\\vue-shop\\src\\components\\goods\\cate.vue?vue&type=style&index=0&id=98559710&scoped=true&lang=less&","dependencies":[{"path":"C:\\Users\\administer\\Desktop\\code\\vue-shop\\src\\components\\goods\\cate.vue","mtime":1578465376065},{"path":"C:\\Users\\administer\\Desktop\\code\\vue-shop\\node_modules\\css-loader\\dist\\cjs.js","mtime":1578273666519},{"path":"C:\\Users\\administer\\Desktop\\code\\vue-shop\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1578273673732},{"path":"C:\\Users\\administer\\Desktop\\code\\vue-shop\\node_modules\\postcss-loader\\src\\index.js","mtime":1578273670562},{"path":"C:\\Users\\administer\\Desktop\\code\\vue-shop\\node_modules\\less-loader\\dist\\cjs.js","mtime":1578273669126},{"path":"C:\\Users\\administer\\Desktop\\code\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1578273665272},{"path":"C:\\Users\\administer\\Desktop\\code\\vue-shop\\node_modules\\vue-loader\\lib\\index.js","mtime":1578273673731}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRyZWVUYWJsZXsKICBtYXJnaW4tdG9wOiAxNXB4Owp9Ci5lbC1jYXNjYWRlcnsKICB3aWR0aDogMTAwJTsKfQo="},{"version":3,"sources":["cate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuOA;AACA;AACA;AACA;AACA;AACA","file":"cate.vue","sourceRoot":"src/components/goods","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片 -->\r\n    <el-card>\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"4\">\r\n          <el-button type=\"primary\" @click=\"showAddCateDialog\">添加分类</el-button>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 商品分类列表区域 -->\r\n      <tree-table\r\n        class=\"treeTable\"\r\n        :data=\"goodsCategoryList\"\r\n        :columns=\"columns\"\r\n        :selection-type=\"false\"\r\n        :expand-type=\"false\"\r\n        show-index index-text=\"#\"\r\n        border\r\n        :show-row-hover=\"false\">\r\n        <!-- 是否有效 -->\r\n        <template slot=\"isok\" slot-scope=\"scope\">\r\n          <i class=\"el-icon-success\" v-if=\"scope.row.cat_deleted === false\" style=\"color: lightgreen;\"></i>\r\n          <i class=\"el-icon-error\" v-else style=\"color: red;\"></i>\r\n        </template>\r\n\r\n        <!-- 排序 -->\r\n        <template slot=\"order\" slot-scope=\"scope\">\r\n          <el-tag size=\"mini\" v-if=\"scope.row.cat_level === 0\">一级</el-tag>\r\n          <el-tag type=\"success\" size=\"mini\" v-else-if=\"scope.row.cat_level === 1\">二级</el-tag>\r\n          <el-tag type=\"warning\" size=\"mini\" v-else>三级</el-tag>\r\n        </template>\r\n\r\n        <!-- 操作 -->\r\n        <template slot=\"opt\" slot-scope=\"scope\">\r\n          {{scope.row.cat_level}}\r\n          <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\">编辑</el-button>\r\n          <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\">删除</el-button>\r\n        </template>\r\n      </tree-table>\r\n\r\n      <!-- 分页区域 -->\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"queryInfo.pagenum\"\r\n        :page-sizes=\"[3, 5, 10, 15]\"\r\n        :page-size=\"queryInfo.pagesize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\">\r\n      </el-pagination>\r\n    </el-card>\r\n\r\n    <!-- 添加分类对话框 -->\r\n    <el-dialog\r\n      title=\"添加分类\"\r\n      :visible.sync=\"addCateDialogVisible\"\r\n      width=\"30%\"\r\n      @close=\"closeAddDialog\">\r\n      <!-- 添加分类表单 -->\r\n      <el-form :model=\"addCateForm\" :rules=\"addCateRules\" ref=\"addCateFormRef\" label-width=\"100px\">\r\n        <el-form-item label=\"分类名称：\" prop=\"cat_name\">\r\n          <el-input v-model=\"addCateForm.cat_name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"父级分类：\">\r\n          <el-cascader\r\n            :options=\"parentCateList\"\r\n            :props=\"casCaderProps\"\r\n            v-model=\"selectedKeys\"\r\n            @change=\"parentCateChange\"\r\n            clearable></el-cascader>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addCateDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addCate\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'cate',\r\n  data() {\r\n    return {\r\n      // 查询条件\r\n      queryInfo: {\r\n        type: 3,\r\n        pagenum: 1,\r\n        pagesize: 5\r\n      },\r\n      // 商品分类列表\r\n      goodsCategoryList: [],\r\n      // 父级商品分类列表\r\n      parentCateList: [],\r\n      // 总数据条数\r\n      total: 0,\r\n      // table列的定义\r\n      columns: [\r\n        {\r\n          label: '分类名称',\r\n          prop: 'cat_name'\r\n        },\r\n        {\r\n          label: '是否有效',\r\n          // 当前列为模板列\r\n          type: 'template',\r\n          // 指定该模板列的名称\r\n          template: 'isok'\r\n        },\r\n        {\r\n          label: '排序',\r\n          // 当前列为模板列\r\n          type: 'template',\r\n          // 指定该模板列的名称\r\n          template: 'order'\r\n        },\r\n        {\r\n          label: '操作',\r\n          // 当前列为模板列\r\n          type: 'template',\r\n          // 指定该模板列的名称\r\n          template: 'opt'\r\n        }\r\n      ],\r\n      // 控制 商品分类对话框的显示与隐藏\r\n      addCateDialogVisible: false,\r\n      // 添加商品分类表单数据对象\r\n      addCateForm: {\r\n        // 父级分类等级\r\n        cat_pid: 0,\r\n        cat_name: '',\r\n        // 分类的等级 默认要添加的分类是一级分类\r\n        cat_level: 0\r\n      },\r\n      // 添加商品分类表单验证规则\r\n      addCateRules: {\r\n        cat_name: [\r\n          { required: true, message: '请输入分类名称', trigger: 'blur' },\r\n          { min: 3, max: 10, message: '长度在3-10字符之间', trigger: 'blur' }\r\n        ]\r\n      },\r\n      // 级联选择器的配置对象\r\n      casCaderProps: {\r\n        expandTrigger: 'hover',\r\n        value: 'cat_id',\r\n        label: 'cat_name',\r\n        children: 'children'\r\n      },\r\n      // 级联选择器选中的父级分类的id数组\r\n      selectedKeys: []\r\n    }\r\n  },\r\n  created () {\r\n    this.getGoodsCategoryList()\r\n  },\r\n  methods: {\r\n    // 获取商品分类列表(三级分类列表)\r\n    async getGoodsCategoryList() {\r\n      const { data: res } = await this.$http.get('/categories', { params: this.queryInfo })\r\n      if (res.meta.status !== 200) return this.$message.error('获取商品分类列表失败')\r\n      this.goodsCategoryList = res.data.result\r\n      this.total = res.data.total\r\n    },\r\n    // 获取商品父级分类列表（二级分类列表）\r\n    async getParentCateList() {\r\n      const { data: res } = await this.$http.get('/categories', { params: { type: 2 } })\r\n      console.log(res.data)\r\n      if (res.meta.status !== 200) return this.$message.error('获取父级商品分类列表失败')\r\n      this.parentCateList = res.data\r\n    },\r\n    // 监听 pageSize 分页显示总条数\r\n    handleSizeChange(newSize) {\r\n      this.queryInfo.pagesize = newSize\r\n      this.getGoodsCategoryList()\r\n    },\r\n    // 监听 pagenum 分页显示当前页\r\n    handleCurrentChange(newPage) {\r\n      this.queryInfo.pagenum = newPage\r\n      this.getGoodsCategoryList()\r\n    },\r\n    showAddCateDialog() {\r\n      this.addCateDialogVisible = true\r\n      this.getParentCateList()\r\n    },\r\n    // 选择项发生变化调用这个函数\r\n    parentCateChange() {\r\n      console.log(this.selectedKeys)\r\n      if (this.selectedKeys.length > 0) {\r\n        // 父级分类的 id\r\n        this.addCateForm.cat_pid = this.selectedKeys[this.selectedKeys.length - 1]\r\n        // 为当前分类的等级赋值\r\n        this.addCateForm.cat_level = this.selectedKeys.length\r\n      } else {\r\n        // 父级分类的 id\r\n        this.addCateForm.cat_pid = 0\r\n        // 为当前分类的等级赋值\r\n        this.addCateForm.cat_level = 0\r\n      }\r\n    },\r\n    // 监听对话框的关闭事件，重置表单数据\r\n    closeAddDialog() {\r\n      this.$refs.addCateFormRef.resetFields()\r\n      this.selectedKeys = []\r\n      this.addCateForm.cat_level = 0\r\n      this.addCateForm.cat_pid = 0\r\n    },\r\n    addCate() {\r\n      console.log(this.addCateForm)\r\n      this.$refs.addCateFormRef.validate(async valid => {\r\n        if (valid) {\r\n          const { data: res } = await this.$http.post('/categories', this.addCateForm)\r\n          if (res.meta.status !== 201) return this.$message.error('添加商品分类失败')\r\n          this.$message.success('添加商品分类成功')\r\n          this.getGoodsCategoryList()\r\n          this.addCateDialogVisible = false\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n  .treeTable{\r\n    margin-top: 15px;\r\n  }\r\n  .el-cascader{\r\n    width: 100%;\r\n  }\r\n</style>\r\n"]}]}